@model Vidly.ViewModels.NewMovieFormViewModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Title tulee Viewmodels/NewMovieViewModel -->
<h2>@Model.Title</h2>

<!-- Formi lähettää tiedot MoviesControllerin Save Actionille
    kun submit-painiketta klikataan -->
@using (Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.Label("Release Date")
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d/M/yyyy }", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.Label("Genre")
        <!--DropDownList attribuutit:
            1. list of items
            2. name of the property in membership type class which holds item
            3. property joka holds text to item
            "Select membershiptype" -> luo rivin listan ylimmäksi -->
        @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>

    <div class="form-group">
        @Html.Label("Number in Stock")
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>

    //hidden kenttä, lähtee eteenpäin mutta ei näy käyttäjälle
    @Html.HiddenFor(m => m.Id)

    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-primary">Save</button>
}
<!--client side errors aktivointi-->
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}