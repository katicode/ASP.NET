@model IEnumerable<Vidly.Models.Customer>
    <!--Käytetty listan luomiseen IEnumerable, joten siksi se tuotava tänne -->

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

    <table id="customers" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Customer</th>
                <th>Discount Rate</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            <!-- Placeholder for datatable-->
        </tbody>
    </table>


<!--Jquery, etsitään id customers (taulukko) ja sieltä kaikki luokan js-delete objektit
    on-metodi hoitaa click-eventit ja function = callback function eli se mitä tehdään
    -->
@section scripts 
{
    <script>
        $(document).ready(function () {
            // Käytetään DataTablea customers taulukossa -> sivunumerointi, haku, sorttaus ym.
            $("#customers").DataTable({
                // käytetään apia taulukon luomiseen
                ajax: {
                    url: "/api/customers",
                    // data saadaan customers-taulukosta, vastaus joka saadaan api:lta on array of objects, so the array is the actual source of data
                    dataSrc: ""
                },
                // columns array
                columns: [
                    {
                        data: "name",
                        render: function(data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "name"
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            // Js-delete siirretty on-metodin toiseksi arvoksi, näin etsitään koko taulukosta ja sitten click eventit suodatetaan
            // jos js-delete olisi aiemmassa kohdassa niin silloin jokaisella taulun rivillä olisi oma click-event ja se veisi paljon enemmän muistia
            // #customers = selector
            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);

                // Bootbox.confirm ei palauta booleania, it takes a callback function
                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) { //jos tulos on oikea arvo (eli ei nolla tai määrittelemätön)
                        $.ajax({
                        url: "/api/customers/" + button.attr("data-customer-id"),
                        method: "DELETE",
                        success: function () {
                            button.parents("tr").remove();
                            //console.log("Success");
                        }
                    });
                    }
                });
            });
        });    
    </script>>
}